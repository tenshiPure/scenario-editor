"---------------------------------
" vim:set ft=vim:
"
" 2014/09/03 ryo
" ASP plugin
"
" see => 
"---------------------------------

let $ASPFunctionCall   = $plugins_asp . '/command/ASPFunctionCall'
let $__ASPFunctionCall = $plugins_asp . '/command/__ASPFunctionCall.py'
let $inpath            = $plugins_asp . '/tmpfiles/in'
let $outpath           = $plugins_asp . '/tmpfiles/out'

"<args>?
command! -nargs=+ -complete=file ASP call ASPFunctionCall(<f-args>)

function! ASPFunctionCall(...)
	let g:scenarioname = GetScenarioName(a:000)
	let g:inpath = GetInPath(a:0, a:000)
	let g:outpath = GetOutPath()

	call WindowOpen()
endfunction

function! GetScenarioName(args)
	return a:args[0]
endfunction

function! GetInPath(argn, args)
	if a:argn == 2
		return a:args[1]
	else
		return $inpath
	endif
endfunction

function! GetOutPath()
	return $outpath
endfunction

function! WindowOpen()
	execute 'tabedit ' . g:outpath
	let g:outbufnum = bufnr('')

	execute 'vsplit ' . g:inpath
	let g:inbufnum = bufnr('')

	call BufClean(g:outbufnum)
	call WindowSwitch(g:inbufnum)
endfunction

function! WindowSwitch(bufnum)
	let winnum = bufwinnr(a:bufnum)
	execute winnum . 'wincmd w'
endfunction

function! BufClean(bufnum)
	call WindowSwitch(a:bufnum)
	execute ':normal ggdG'
endfunction



command! Run call Run()

function! Run()
	call WindowSwitch(g:outbufnum)
	call Execute()
	execute 'e!'
	execute 'w!'
endfunction

function! Execute()
python << EOM
import os
import vim

ASPFunctionCall = vim.eval('$ASPFunctionCall')
__ASPFunctionCall = vim.eval('$__ASPFunctionCall')
scenarioname = vim.eval('g:scenarioname')
inpath = vim.eval('g:inpath')
outpath = vim.eval('g:outpath')

os.system('python %(__ASPFunctionCall)s %(ASPFunctionCall)s %(scenarioname)s %(inpath)s %(outpath)s' % locals())
EOM
endfunction



command! -nargs=1 -complete=file WriteIn call WriteIn(<f-args>)

function! WriteIn(path)
	execute '!cp ' . g:inpath . ' ' . a:path
endfunction

command! -nargs=1 -complete=file WriteOut call WriteOut(<f-args>)

function! WriteOut(path)
	execute '!cp ' . g:outpath . ' ' . a:path
endfunction

command! -nargs=1 -complete=file ReadIn call ReadIn(<f-args>)

function! ReadIn(path)
	execute 'bdelete! ' . g:inbufnum

	" func
	" tab
	execute 'vsplit ' . a:path
	let g:inbufnum = bufnr('')
endfunction

command! NewIn call NewIn()

function! NewIn()
	execute 'bdelete! ' . g:inbufnum

	" autocmdで保存
	execute 'vsplit ' . $inpath
	let g:inbufnum = bufnr('')
endfunction
