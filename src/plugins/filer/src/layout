"---------------------------------
" vim:set ft=vim:
"
" 2014/09/04 ryo
" Filer plugin function about layout
"
" see => 
"---------------------------------

" create and output tree
function! OutputNewTree()
	let command = CreateFindCommand()
	let paths = GetPaths(command)
	let g:entries = Convert(paths)

	execute ':normal ggdG'

	for entry in g:entries
		call append('$', entry.output)
	endfor

	execute ':normal ggdd'
endfunction

" side filer open/close
function! Toggle()
	if $isOpen == 0
		call Open()
		call OutputNewTree()
		let $isOpen = 1
	else
		call Close()
		let $isOpen = 0
	endif
endfunction

" open left side filer
function! Open()
	execute ':topleft 50 vsplit ' . $filerworkfile
	let g:fileworkfilebufnum = bufnr('')
endfunction

" close left side filer
function! Close()
	call FocusFiler()
	execute ':bdelete!'
endfunction

" focus filer
function! FocusFiler()
	call WindowSwitch(g:fileworkfilebufnum)
endfunction

" focus out filer
function! FocusOutFiler()
	call FocusFiler()
	execute 'wincmd w'
endfunction

" switch window by bufnum
function! WindowSwitch(bufnum)
	let winnum = bufwinnr(a:bufnum)
	execute winnum . 'wincmd w'
endfunction

" execute edit or tabedit
function! Edit(entry)
	if a:entry.isDir
		echo 'directory is not editable.'
		return
	endif

	call FocusOutFiler()

	if IsBlankBuffer()
		call __Edit(a:entry.path)
	else
		call __TabEdit(a:entry.path)
	endif
endfunction

" check buffer name
function! IsBlankBuffer()
	return bufname('%') == ''
endfunction

" check entry type
function! IsDirectory(path)
	return a:path == '_directory_'
endfunction

" edit
function! __Edit(path)
		execute ':edit ' . a:path
endfunction

" tabedit
function! __TabEdit(path)
		execute ':tabedit ' . a:path
endfunction
