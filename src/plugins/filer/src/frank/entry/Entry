" vim:set ft=vim:

python <<EOM

class Entry:

	def __init__(self, root, path):
		self.num = Num.createAndNext()
		self.path = path
		self.depth = Depth(root, path)
		self.fold = Fold()

	def _subs(self):
		return self.entries if self.type.isDir() else []

	def _subfiles(self):
		return [e for e in self.entries if e.type.isFile()] if self.type.isDir() else []

	def getOutputs(self, result):
		result.append(self._createOutput())
		if not self.fold.isOn():
			[e.getOutputs(result) for e in self._subs()]
		return result

	def foldOn(self):
		self.fold.on()
		[e.fold.on() for e in self._subfiles()]

	def foldOff(self):
		self.fold.off()
		[e.fold.off() for e in self._subfiles()]

	def reNumbering(self):
		self._createAndNext()
		if self.fold.isOn():
			[e._createNotOutput() for e in self._subs()]
		else:
			[e.reNumbering() for e in self._subs()]

	def _createAndNext(self):
		self.num = Num.createAndNext()

	def _createNotOutput(self):
		self.num = Num.createNotOutput()
		[e._createNotOutput() for e in self._subs()]

	def __iter__(self):
		return self._generator()

	def _generator(self):
		yield self
		for subEntry in self._subs():
			for eachSubEntry in subEntry._generator():
				yield eachSubEntry

EOM
